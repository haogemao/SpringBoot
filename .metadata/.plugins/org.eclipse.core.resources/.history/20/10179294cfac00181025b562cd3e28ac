package com.person.springboot.controller;

import static org.mockito.Mockito.RETURNS_DEEP_STUBS;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

import com.person.springboot.entities.Girl;
import com.person.springboot.mapper.GirlRespository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
public class GirlController {

	@Autowired
	private GirlRespository girlRepository;
	
	/**
	 * 查询所有女生列表
	 * @return
	 */
	@GetMapping("/girls")
	public List<Girl> girlList(){
		log.info("girlList");
		return girlRepository.findAll();
	}
	
	@PostMapping("/girls")
	public Girl girlAdd(@Valid Girl girl, BindingResult bindingResult) {
		if (bindingResult.hasErrors()) {
			log.info(bindingResult.getFieldError().getDefaultMessage());
			return null;
		}
		return girlRepository.save(girl);
	}
	//查询一个女生
    @GetMapping(value = "/girls/{id}")
    public Girl girlFindOne(@PathVariable("id") Integer id) {
        return girlRepository.findOne(id);
    }

    //更新
    @PutMapping(value = "/girls/{id}")
    public Girl girlUpdate(@PathVariable("id") Integer id,
                           @RequestParam("cupSize") String cupSize,
                           @RequestParam("age") Integer age) {
        Girl girl = new Girl();
        girl.setId(id);
        girl.setCupSize(cupSize);
        girl.setAge(age);

        return girlRepository.save(girl);
    }

    //删除
    @DeleteMapping(value = "/girls/{id}")
    public void girlDelete(@PathVariable("id") Integer id) {
        girlRepository.delete(id);
    }
}
